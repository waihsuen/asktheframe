FROM debian:bullseye

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Packages:
# - curl, ca-certificates: fetch releases & do connectivity probe
# - iptables, iproute2: portal redirect/NAT rules
# - wireless-tools: optional but handy
# - bash: for our launcher
# - libdbus-1-3: runtime lib required by wifi-connect binary
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl ca-certificates iptables iproute2 wireless-tools bash libdbus-1-3 && \
    rm -rf /var/lib/apt/lists/*

# Build arg to choose version; use vX.Y.Z for reproducibility
ARG VERSION="latest"

WORKDIR /usr/src/app
RUN set -euo pipefail; \
    BASE_URL="https://github.com/balena-os/wifi-connect/releases"; \
    DETECTED_ARCH="$(uname -m)"; \
    case "${DETECTED_ARCH}" in \
    aarch64) BINARY_ARCH_NAME="aarch64-unknown-linux-gnu" ;; \
    x86_64)  BINARY_ARCH_NAME="x86_64-unknown-linux-gnu" ;; \
    armv7l)  BINARY_ARCH_NAME="armv7-unknown-linux-gnueabihf" ;; \
    *) echo "error: unsupported architecture (${DETECTED_ARCH})" >&2; exit 1 ;; \
    esac; \
    if [[ "${VERSION}" == "latest" ]]; then URL_PARTIAL="latest/download"; else URL_PARTIAL="download/${VERSION}"; fi; \
    curl -Ls "${BASE_URL}/${URL_PARTIAL}/wifi-connect-${BINARY_ARCH_NAME}.tar.gz" \
    | tar -xz -C /usr/src/app/ && \
    mkdir -p /usr/src/app/ui && \
    curl -Ls "${BASE_URL}/${URL_PARTIAL}/wifi-connect-ui.tar.gz" \
    | tar -xz -C /usr/src/app/ui

# Bring in launcher
COPY start.sh /usr/src/app/start.sh
RUN chmod +x /usr/src/app/start.sh

CMD ["bash", "/usr/src/app/start.sh"]